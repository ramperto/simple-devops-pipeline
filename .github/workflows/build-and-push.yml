name: Build and deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_version:
        description: "Tag version"
        required: true
      branch:
        description: "Branch to build and deploy"
        required: true
        default: main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set manual or automatic Push
        id: set-tag
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "TAG_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            if [[ "${{ github.event.inputs.tag_version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "TAG_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
            else
              echo "Invalid tag format, use vX.Y.Z"
              exit 1
            fi
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and tag docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/testing-welcome:latest -t ${{ secrets.DOCKER_USERNAME }}/testing-welcome:$TAG_VERSION .

      - name: Push docker image to docker hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/testing-welcome:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/testing-welcome:$TAG_VERSION

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set Tag Version
        run: echo "TAG_VERSION=${{ github.event.release.tag_name || github.event.inputs.tag_version }}" >> $GITHUB_ENV

      - name: Set up ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      
      - name: Deploy
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/testing-welcome:$TAG_VERSION
          docker stop welcome-app || true
          docker rm welcome-app || true
          docker run -d --name welcome-app -p 8000:5000 --restart unless-stopped ${{ secrets.DOCKER_USERNAME }}/testing-welcome:$TAG_VERSION
          EOF